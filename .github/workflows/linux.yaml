name: Linux

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      # matrix:
      #   config:
      #     - { compiler: gcc, version: 13, build_type: release, cxx: g++ }
      #     - { compiler: clang, version: 17, build_type: release, cxx: clang++ }
    container:
      image: 'wwfalcon/noisepage'
    name: 'build-noisepage'
    steps:
      - name: Checkout
        uses: actions/checkout@main

      # - name: Setup dependencies
      #   run: |
      #     apt-get update -y
      #     apt-get install -y curl git pkg-config ccache lcov

      - name: CMake Setup
        run: |
          # ld.lld: error: failed to open test/xxx: No space left on device
          # cmake -GNinja -Bbuild -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DNOISEPAGE_UNITY_BUILD=ON -DNOISEPAGE_GENERATE_COVERAGE=ON -DNOISEPAGE_BUILD_TESTS=ON
          cmake -GNinja -Bbuild -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Release -DNOISEPAGE_UNITY_BUILD=ON

      - name: CMake Build
        run: |
          cmake --build build

      - name: Check TPL
        run: |
          cmake --build build --target check-tpl

      # - name: CMake Test
      #   run: |
      #     # ctest --test-dir build -j2 --output-on-failure || true
      #     cmake --build build -t unittest

      # - name: CMake Coverage
      #   run: |
      #     cmake --build build -t coverage

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v4.0.1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
